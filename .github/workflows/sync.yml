name: Sync with upstream

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: 

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/vernesong/OpenClash.git
          git fetch upstream

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Sync with upstream (excluding specific files)
        run: |
          git checkout main
          git merge upstream/dev --allow-unrelated-histories --no-commit --no-ff
          if [ -f .syncignore ]; then
            while IFS= read -r file
            do
              git reset HEAD "$file" 2>/dev/null || true
              git checkout -- "$file" 2>/dev/null || true
            done < .syncignore
          else
            echo ".syncignore file not found"
          fi
          git status
          git commit -m "Sync dengan upstream dev branch (kecuali file yang dikecualikan)" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version
        run: |
          UPSTREAM_VERSION=$(git rev-parse upstream/dev)
          COMMIT_DATE=$(git log -1 --format=%cd --date=short upstream/dev)
          sed -i "s/versi: .*/versi: dev-$COMMIT_DATE (${UPSTREAM_VERSION:0:7})/" README.md
          git add README.md
          git commit -m "Update versi ke dev-$COMMIT_DATE (${UPSTREAM_VERSION:0:7})" || echo "No version changes to commit"
          git push origin main || echo "No version changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
